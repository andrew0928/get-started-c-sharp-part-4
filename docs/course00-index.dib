#!meta

{"kernelInfo":{"defaultKernelName":"csharp","items":[{"aliases":[],"languageName":"csharp","name":"csharp"}]}}

#!markdown

## MVP 聚技站｜.NET C# 系列 | 臺灣版, 2023/11/09 - Andrew Wu

![banner](image.png)

主題: 在 C# 主控台應用程式中使用變數資料 (開始使用 C#，第 4 部分)

深入探索資料與類型，並學習如何操作字串與數值資料，以及對陣列執行作業。 在此學習路徑中，您將會：

- (型別) 針對您必須處理的資料，選擇正確的資料類型
- (轉型) 轉換資料並將資料從一種類型轉換成另一種類型
- (顯示) 修改字串資料，設定其格式以供顯示或變更字串內容
- (陣列) 操作陣列、新增、移除及排序資料

* Microsoft Learn 連結: [Learn C#](https://learn.microsoft.com/zh-tw/collections/yz26f8y64n7k07?WT.mc_id=dotnet-35129-website&sharingId=AZ-MVP-5002155)

#!markdown

### Andrew's Notes: 在開始之前

我介紹的重點，會以官方 Microsoft Learn - C# Part 4 的內容為主。

不過官方教材大約需要花 6 小時，我會跳過部分適合自己練習的地方。而我會額外追加我認為重要的基礎知識在這次直播。
我的順序是這樣:

1. C# 使用變數的必要基礎知識，以及語法 & 編譯器的支援 (course01, course02)
1. .NET BCL (Basic Class Library) 內建的套件支援 (course03, course04)
1. (追加) 背後重要的觀念

而這些部份我會略過，或是點到為止:
1. 上述基礎的組合應用 (需要自己練習)
1. 上述基礎的延伸應用 (需要自己查文件支援)



### Andrew's Notes: C# 基礎認證

我推薦所有想學好 C# 的人，都看過一次官方教材，有餘力的話試著去取得官方的認證。
並不是說認證代表一切，而是準備認證的過程，代表你對 C# 官方認為重要的特點你都有掌握到。官方教材最有價值的地方
在於他一定會完整涵蓋設計 C# 語言的完整特性。

學習資訊相關的技術，最忌諱只學你想學的 (尤其是越基礎的技能越是如此)，往後你可能會面臨的瓶頸是: 我要解 B 問題，但是我只會 A，
於是我就用了很多方式拼拼湊湊，把 B 解掉。你花了比別人多的功夫，成效比別人差，而這結果不是因為你能力差，只因為你不知道原來 B 問題
有 B 功能可以直接面對。

> 官方教材的價值在於完整度與公信力，是讓你掌握全貌的好管道。你不需要靠官方教材 "精通" C#，但是你如果靠她 "入門"，你會知道你還要加強哪裡。

補上 Microsoft 提供的 C# 基礎認證介紹:
![Alt text](image-4.png)
https://devblogs.microsoft.com/dotnet/announcing-foundational-csharp-certification/

![](image-5.png)

#!markdown

### Andrew's Notes: 這次的 Labs 示範方式

為了方便展示 C# 語言的特性與使用方式，我只有在特定的 demo 會用完整的 .net project 來進行示範，其餘大部分的 demo 我都會用 .NET Interactive Notebooks (for C#) 環境來示範這些程式碼的運作方式 & 輸出結果。

如果你想要自己照著練習，請準備下列環境:

1. VS Code
1. .NET 7.0 SDK
1. 安裝 VS Code Extension (現在已經改名為 Polyglot Notebooks):  
https://marketplace.visualstudio.com/items?itemName=ms-dotnettools.dotnet-interactive-vscode

保哥有準備一份繁體中文版的 repo, 包含大量的介紹與示範教學，有興趣了解的可以多加利用:  
https://github.com/doggy8088/csharp-notebooks#net-interactive-notebooks-for-c

#!csharp

// 互動式的 demo: .NET Interactive Notebooks for C#
// 參考保哥的 GitHub: https://github.com/doggy8088/csharp-notebooks#net-interactive-notebooks-for-c

// demo 1, how to run demo code?
// demo 2, variables

var name = "Andrew Wu";
Console.WriteLine($"Hello World, {name}!");

#!csharp

Console.WriteLine($"Hello World Again, {name}!");

#!markdown

### Andrew's Note: 建立 .NET 專案, 用 VS code 開發

這次的介紹，我雖然都用 .NET Interactive Notebook 示範，但是正式開發你還是跑不掉這個過程。
我會簡單的示範一次基本的流程。

1. 用命令列產生 .NET 專案: 先建立好工作目錄，切換到工作目錄後執行 ```dotnet new console```
1. 開啟 vscode 編輯這個工作目錄。我個人喜歡直接用命令列叫出 vscode: ```code .```
1. 按照課程的說明，將程式碼放到專案內
1. 命令列: ```dotnet run``` 可執行，```dotnet build``` 可以建構專案
1. 你也可以用 vscode, F5 進入除錯模式 (可暫停，或是觀察變數內容)，也可 CTRL-F5 跳過 debugger 直接執行 (等同 dotnet run)

(直接看示範 demo)
